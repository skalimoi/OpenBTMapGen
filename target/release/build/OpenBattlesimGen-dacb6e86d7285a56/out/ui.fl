
use fltk::browser::*;
use fltk::button::*;
use fltk::dialog::*;
use fltk::enums::*;
use fltk::frame::*;
use fltk::group::*;
use fltk::image::*;
use fltk::input::*;
use fltk::menu::*;
use fltk::misc::*;
use fltk::output::*;
use fltk::prelude::*;
use fltk::table::*;
use fltk::text::*;
use fltk::tree::*;
use fltk::valuator::*;
use fltk::widget::*;
use fltk::window::*;

#[derive(Debug, Clone)]
pub struct UserInterface {
    pub main_window: Window,
    pub menu_bar: MenuBar,
    pub preview_pane: Group,
    pub topography_pane: Group,
    pub topo_preview: Group,
    pub topo_ero_preview: Group,
    pub high_elev_slider: ValueSlider,
    pub sea_elev_slider: ValueSlider,
    pub hydrography_pane: Group,
    pub hydro_preview: Group,
    pub hydro_mask_preview: Group,
    pub weather_pane: Group,
    pub hydro_preview: Group,
    pub misc_pane: Group,
}

impl UserInterface {
    pub fn make_window() -> Self {
	let mut main_window = Window::new(355, 223, 870, 579, None);
	main_window.set_label("OpenBattlesim Map Generator");
	main_window.set_type(WindowType::Double);
	let mut menu_bar = MenuBar::new(0, 0, 870, 30, None);
	let idx = menu_bar.add_choice("File/Open Scenario...");
	let idx = menu_bar.add_choice("File/Save Scenario");
	let idx = menu_bar.add_choice("File/Save Scenario as...");
	let idx = menu_bar.add_choice("Edit/Set Scenario Parameters...");
	menu_bar.end();
	let mut fl2rust_widget_0 = Tabs::new(-3, 29, 898, 567, None);
	let mut preview_pane = Group::new(0, 60, 870, 520, None);
	preview_pane.set_label("Preview");
	fl2rust_widget_0.resizable(&preview_pane);
	let mut fl2rust_widget_1 = Group::new(14, 80, 841, 475, None);
	fl2rust_widget_1.set_label("Final preview");
	preview_pane.resizable(&fl2rust_widget_1);
	fl2rust_widget_1.set_color(Color::by_index(32));
	fl2rust_widget_1.set_frame(FrameType::ThinDownFrame);
	let mut fl2rust_widget_2 = Scrollbar::new(835, 80, 20, 455, None);
	let mut fl2rust_widget_3 = Scrollbar::new(15, 535, 820, 20, None);
	fl2rust_widget_3.set_type(ScrollbarType::Horizontal);
	fl2rust_widget_1.end();
	preview_pane.end();
	let mut topography_pane = Group::new(0, 60, 870, 520, None);
	topography_pane.set_label("Topography");
	topography_pane.hide();
	let mut fl2rust_widget_4 = Group::new(0, 60, 760, 520, None);
	fl2rust_widget_4.set_frame(FrameType::BorderBox);
	let mut fl2rust_widget_5 = Output::new(260, 81, 310, 485, None);
	fl2rust_widget_4.resizable(&fl2rust_widget_5);
	fl2rust_widget_4.end();
	let mut topo_preview = Group::new(15, 80, 230, 230, None);
	topo_preview.set_label("Original Preview");
	topo_preview.set_color(Color::by_index(0));
	topo_preview.set_frame(FrameType::EngravedFrame);
	topo_preview.set_label_color(Color::by_index(8));
	topo_preview.end();
	let mut topo_ero_preview = Group::new(15, 335, 230, 230, None);
	topo_ero_preview.set_label("Erosion Preview");
	topo_ero_preview.set_color(Color::by_index(0));
	topo_ero_preview.set_frame(FrameType::EngravedFrame);
	topo_ero_preview.set_label_color(Color::by_index(8));
	topo_ero_preview.end();
	let mut fl2rust_widget_6 = Group::new(585, 60, 285, 520, None);
	fl2rust_widget_6.set_align(unsafe {std::mem::transmute(192)});
	fl2rust_widget_6.set_frame(FrameType::FlatBox);
	let mut fl2rust_widget_7 = Input::new(630, 61, 165, 24, None);
	fl2rust_widget_7.set_label("Seed:");
	let mut fl2rust_widget_8 = Button::new(800, 60, 64, 25, None);
	fl2rust_widget_8.set_label("Random");
	fl2rust_widget_8.set_frame(FrameType::GtkUpBox);
	fl2rust_widget_8.set_down_frame(FrameType::GtkDownBox);
	fl2rust_widget_6.end();
	let mut fl2rust_widget_9 = Group::new(595, 100, 265, 175, None);
	fl2rust_widget_9.set_color(Color::by_index(37));
	fl2rust_widget_9.set_frame(FrameType::BorderFrame);
	let mut fl2rust_widget_10 = Choice::new(719, 125, 95, 25, None);
	fl2rust_widget_10.set_label("Noise type:");
	fl2rust_widget_10.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_10.add_choice("Worley");
	let idx = fl2rust_widget_10.add_choice("Simplex");
	let idx = fl2rust_widget_10.add_choice("Perlin");
	fl2rust_widget_10.end();
	let mut fl2rust_widget_11 = Input::new(720, 160, 95, 25, None);
	fl2rust_widget_11.set_label("Octaves:");
	let mut fl2rust_widget_12 = Input::new(720, 195, 95, 25, None);
	fl2rust_widget_12.set_label("Frequency:");
	let mut fl2rust_widget_13 = Input::new(720, 231, 95, 25, None);
	fl2rust_widget_13.set_label("Lacunarity:");
	fl2rust_widget_9.end();
	let mut fl2rust_widget_14 = Frame::new(596, 90, 110, 25, None);
	fl2rust_widget_14.set_label("Noise settings");
	fl2rust_widget_14.set_frame(FrameType::FlatBox);
	let mut fl2rust_widget_15 = Group::new(595, 300, 265, 195, None);
	fl2rust_widget_15.set_color(Color::by_index(37));
	fl2rust_widget_15.set_frame(FrameType::BorderFrame);
	let mut high_elev_slider = ValueSlider::new(615, 330, 225, 25, None);
	high_elev_slider.set_label("Mountain %");
	high_elev_slider.set_type(SliderType::HorizontalNice);
	high_elev_slider.set_align(unsafe {std::mem::transmute(1)});
	high_elev_slider.set_frame(FrameType::ThinDownBox);
	high_elev_slider.set_text_size(14);
	high_elev_slider.set_maximum(100 as _);
	high_elev_slider.set_step(1 as _, 1);
	let mut sea_elev_slider = ValueSlider::new(615, 384, 225, 25, None);
	sea_elev_slider.set_label("Sea level %");
	sea_elev_slider.set_type(SliderType::HorizontalNice);
	sea_elev_slider.set_align(unsafe {std::mem::transmute(1)});
	sea_elev_slider.set_frame(FrameType::ThinDownBox);
	sea_elev_slider.set_text_size(14);
	sea_elev_slider.set_maximum(100 as _);
	sea_elev_slider.set_step(1 as _, 1);
	let mut fl2rust_widget_16 = ValueInput::new(740, 420, 80, 25, None);
	fl2rust_widget_16.set_label("Minimum height (m)");
	let mut fl2rust_widget_17 = ValueInput::new(740, 455, 80, 25, None);
	fl2rust_widget_17.set_label("Maximum height (m)");
	fl2rust_widget_15.end();
	let mut fl2rust_widget_18 = Frame::new(596, 286, 110, 25, None);
	fl2rust_widget_18.set_label("Terrain settings");
	fl2rust_widget_18.set_frame(FrameType::FlatBox);
	let mut fl2rust_widget_19 = Group::new(600, 510, 260, 55, None);
	fl2rust_widget_19.set_color(Color::by_index(37));
	fl2rust_widget_19.set_frame(FrameType::BorderFrame);
	let mut fl2rust_widget_20 = ValueInput::new(660, 531, 65, 24, None);
	fl2rust_widget_20.set_label("Cycles:");
	fl2rust_widget_19.end();
	let mut fl2rust_widget_21 = Frame::new(595, 500, 110, 25, None);
	fl2rust_widget_21.set_label("Erosion settings");
	fl2rust_widget_21.set_frame(FrameType::FlatBox);
	topography_pane.end();
	let mut hydrography_pane = Group::new(0, 60, 895, 520, None);
	hydrography_pane.set_label("Hydrography");
	hydrography_pane.hide();
	let mut fl2rust_widget_22 = Group::new(0, 60, 870, 520, None);
	fl2rust_widget_22.set_frame(FrameType::BorderBox);
	fl2rust_widget_22.end();
	let mut hydro_preview = Group::new(19, 125, 400, 400, None);
	hydro_preview.set_label("Preview");
	hydro_preview.set_color(Color::by_index(0));
	hydro_preview.set_frame(FrameType::EngravedFrame);
	hydro_preview.set_label_color(Color::by_index(8));
	hydro_preview.end();
	let mut hydro_mask_preview = Group::new(450, 125, 400, 400, None);
	hydro_mask_preview.set_label("Watershed Preview");
	hydro_mask_preview.set_color(Color::by_index(0));
	hydro_mask_preview.set_frame(FrameType::EngravedFrame);
	hydro_mask_preview.set_label_color(Color::by_index(8));
	hydro_mask_preview.end();
	hydrography_pane.end();
	let mut weather_pane = Group::new(0, 60, 870, 520, None);
	weather_pane.set_label("Weather");
	weather_pane.hide();
	let mut fl2rust_widget_23 = Group::new(0, 60, 870, 520, None);
	fl2rust_widget_23.set_frame(FrameType::BorderBox);
	let mut hydro_preview = Group::new(28, 99, 445, 445, None);
	hydro_preview.set_label("Grid Preview");
	hydro_preview.set_color(Color::by_index(37));
	hydro_preview.set_frame(FrameType::BorderFrame);
	hydro_preview.set_label_color(Color::by_index(8));
	hydro_preview.end();
	let mut fl2rust_widget_24 = Group::new(500, 60, 370, 520, None);
	fl2rust_widget_24.set_align(unsafe {std::mem::transmute(192)});
	fl2rust_widget_24.set_frame(FrameType::FlatBox);
	let mut fl2rust_widget_25 = Input::new(605, 61, 165, 24, None);
	fl2rust_widget_25.set_label("Seed:");
	let mut fl2rust_widget_26 = Button::new(775, 60, 64, 25, None);
	fl2rust_widget_26.set_label("Random");
	fl2rust_widget_26.set_frame(FrameType::GtkUpBox);
	fl2rust_widget_26.set_down_frame(FrameType::GtkDownBox);
	let mut fl2rust_widget_27 = Group::new(570, 100, 265, 105, None);
	fl2rust_widget_27.set_color(Color::by_index(37));
	fl2rust_widget_27.set_frame(FrameType::BorderFrame);
	let mut fl2rust_widget_28 = Choice::new(694, 125, 95, 25, None);
	fl2rust_widget_28.set_label("Noise type:");
	fl2rust_widget_28.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_28.add_choice("Worley");
	let idx = fl2rust_widget_28.add_choice("Simplex");
	let idx = fl2rust_widget_28.add_choice("Perlin");
	fl2rust_widget_28.end();
	let mut fl2rust_widget_29 = Input::new(695, 160, 95, 25, None);
	fl2rust_widget_29.set_label("Octaves:");
	fl2rust_widget_27.end();
	let mut fl2rust_widget_30 = Frame::new(571, 90, 110, 25, None);
	fl2rust_widget_30.set_label("Noise settings");
	fl2rust_widget_30.set_frame(FrameType::FlatBox);
	let mut fl2rust_widget_31 = Group::new(570, 233, 265, 264, None);
	fl2rust_widget_31.set_color(Color::by_index(37));
	fl2rust_widget_31.set_frame(FrameType::BorderFrame);
	let mut fl2rust_widget_32 = Choice::new(694, 258, 95, 25, None);
	fl2rust_widget_32.set_label("KÃ¶ppen type:");
	fl2rust_widget_32.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_32.add_choice("Mountains");
	let idx = fl2rust_widget_32.add_choice("Water");
	let idx = fl2rust_widget_32.add_choice("Plains");
	fl2rust_widget_32.end();
	let mut fl2rust_widget_33 = Choice::new(694, 365, 95, 25, None);
	fl2rust_widget_33.set_label("Up:");
	fl2rust_widget_33.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_33.add_choice("Mountain");
	let idx = fl2rust_widget_33.add_choice("Water");
	let idx = fl2rust_widget_33.add_choice("Plains");
	fl2rust_widget_33.end();
	let mut fl2rust_widget_34 = Choice::new(694, 401, 95, 25, None);
	fl2rust_widget_34.set_label("Down:");
	fl2rust_widget_34.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_34.add_choice("Mountains");
	let idx = fl2rust_widget_34.add_choice("Water");
	let idx = fl2rust_widget_34.add_choice("Plains");
	fl2rust_widget_34.end();
	let mut fl2rust_widget_35 = Choice::new(694, 436, 95, 25, None);
	fl2rust_widget_35.set_label("Left:");
	fl2rust_widget_35.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_35.add_choice("Mountains");
	let idx = fl2rust_widget_35.add_choice("Water");
	let idx = fl2rust_widget_35.add_choice("Plains");
	fl2rust_widget_35.end();
	let mut fl2rust_widget_36 = Choice::new(694, 471, 95, 25, None);
	fl2rust_widget_36.set_label("Right:");
	fl2rust_widget_36.set_down_frame(FrameType::BorderBox);
	let idx = fl2rust_widget_36.add_choice("Mountains");
	let idx = fl2rust_widget_36.add_choice("Water");
	let idx = fl2rust_widget_36.add_choice("Plains");
	fl2rust_widget_36.end();
	let mut fl2rust_widget_37 = Input::new(695, 293, 95, 25, None);
	fl2rust_widget_37.set_label("Latitude:");
	let mut fl2rust_widget_38 = ValueOutput::new(695, 329, 95, 24, None);
	fl2rust_widget_38.set_label("Grid size:");
	fl2rust_widget_31.end();
	let mut fl2rust_widget_39 = Frame::new(571, 223, 110, 25, None);
	fl2rust_widget_39.set_label("Climate settings");
	fl2rust_widget_39.set_frame(FrameType::FlatBox);
	let mut fl2rust_widget_40 = Button::new(570, 519, 265, 25, None);
	fl2rust_widget_40.set_label("Generate weather grid");
	fl2rust_widget_40.set_color(Color::by_index(247));
	fl2rust_widget_40.set_selection_color(Color::by_index(247));
	fl2rust_widget_40.set_frame(FrameType::ThinUpBox);
	fl2rust_widget_40.set_down_frame(FrameType::ThinDownBox);
	fl2rust_widget_24.end();
	let mut fl2rust_widget_41 = Frame::new(498, 99, 45, 445, None);
	fl2rust_widget_41.set_color(Color::by_index(38));
	fl2rust_widget_41.set_frame(FrameType::BorderFrame);
	fl2rust_widget_23.end();
	weather_pane.end();
	let mut misc_pane = Group::new(0, 60, 870, 520, None);
	misc_pane.set_label("Misc");
	misc_pane.hide();
	misc_pane.end();
	fl2rust_widget_0.end();
	main_window.end();
	main_window.show();
	Self {
	    main_window,
	    menu_bar,
	    preview_pane,
	    topography_pane,
	    topo_preview,
	    topo_ero_preview,
	    high_elev_slider,
	    sea_elev_slider,
	    hydrography_pane,
	    hydro_preview,
	    hydro_mask_preview,
	    weather_pane,
	    hydro_preview,
	    misc_pane,
	}
    }
}


