/* automatically generated by rust-bindgen 0.69.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Widget {
    _unused: [u8; 0],
}
pub type Fl_Callback = ::core::option::Option<
    unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
>;
pub type custom_handler_callback = ::core::option::Option<
    unsafe extern "C" fn(
        arg1: *mut Fl_Widget,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type custom_draw_callback = ::core::option::Option<
    unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Group {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Group_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Group;
}
extern "C" {
    pub fn Fl_Group_x(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_y(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_width(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_height(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_label(arg1: *mut Fl_Group) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Group_set_label(arg1: *mut Fl_Group, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Group_redraw(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_show(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_hide(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_activate(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_deactivate(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_redraw_label(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_resize(
        arg1: *mut Fl_Group,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Group_widget_resize(
        arg1: *mut Fl_Group,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Group_tooltip(arg1: *mut Fl_Group) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Group_set_tooltip(arg1: *mut Fl_Group, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Group_get_type(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_type(arg1: *mut Fl_Group, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_color(arg1: *mut Fl_Group) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Group_set_color(arg1: *mut Fl_Group, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Group_measure_label(
        arg1: *const Fl_Group,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Group_label_color(arg1: *mut Fl_Group) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Group_set_label_color(arg1: *mut Fl_Group, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Group_label_font(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_label_font(arg1: *mut Fl_Group, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_label_size(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_label_size(arg1: *mut Fl_Group, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_label_type(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_label_type(arg1: *mut Fl_Group, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_box(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_box(arg1: *mut Fl_Group, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_changed(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_changed(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_clear_changed(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_align(arg1: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_align(arg1: *mut Fl_Group, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_delete(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_set_image(arg1: *mut Fl_Group, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_handle(
        self_: *mut Fl_Group,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Group_handle_event(
        self_: *mut Fl_Group,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_draw(
        self_: *mut Fl_Group,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Group_resize_callback(
        self_: *mut Fl_Group,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Group_set_when(arg1: *mut Fl_Group, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_when(arg1: *const Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_image(arg1: *const Fl_Group) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_parent(self_: *const Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_selection_color(arg1: *mut Fl_Group) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Group_set_selection_color(arg1: *mut Fl_Group, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Group_do_callback(arg1: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_inside(
        self_: *const Fl_Group,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_window(arg1: *const Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_top_window(arg1: *const Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_takes_events(arg1: *const Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_user_data(arg1: *const Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_take_focus(self_: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_set_visible_focus(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_clear_visible_focus(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_visible_focus(self_: *mut Fl_Group, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_has_visible_focus(self_: *mut Fl_Group) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Group_set_user_data(arg1: *mut Fl_Group, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_draw_data(self_: *const Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_handle_data(self_: *const Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_set_draw_data(self_: *mut Fl_Group, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_set_handle_data(self_: *mut Fl_Group, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_damage(self_: *const Fl_Group) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Group_set_damage(self_: *mut Fl_Group, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Group_set_damage_area(
        self_: *mut Fl_Group,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Group_clear_damage(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_as_window(self_: *mut Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_as_group(self_: *mut Fl_Group) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_set_deimage(arg1: *mut Fl_Group, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_deimage(arg1: *const Fl_Group) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Group_set_callback(
        arg1: *mut Fl_Group,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Group_set_deleter(
        arg1: *mut Fl_Group,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Group_visible(self_: *const Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_visible_r(self_: *const Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_active(self_: *const Fl_Group) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Group_active_r(self_: *const Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_callback(self_: *const Fl_Group) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Group_set_deletion_callback(
        self_: *mut Fl_Group,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Group_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Group;
}
extern "C" {
    pub fn Fl_Group_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Group;
}
extern "C" {
    pub fn Fl_Group_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_current() -> *mut Fl_Group;
}
extern "C" {
    pub fn Fl_Group_set_current(grp: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_begin(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_end(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_find(
        self_: *mut Fl_Group,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_add(self_: *mut Fl_Group, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_insert(
        self_: *mut Fl_Group,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Group_remove(self_: *mut Fl_Group, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_remove_by_index(self_: *mut Fl_Group, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_clear(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_children(self_: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_child(arg1: *mut Fl_Group, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Group_resizable(self_: *mut Fl_Group, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Group_set_clip_children(self_: *mut Fl_Group, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Group_clip_children(self_: *mut Fl_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Group_init_sizes(self_: *mut Fl_Group);
}
extern "C" {
    pub fn Fl_Group_draw_child(self_: *const Fl_Group, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Group_update_child(self_: *const Fl_Group, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Group_draw_outside_label(self_: *const Fl_Group, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Group_draw_children(self_: *mut Fl_Group);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Pack {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Pack_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Pack;
}
extern "C" {
    pub fn Fl_Pack_x(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_y(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_width(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_height(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_label(arg1: *mut Fl_Pack) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Pack_set_label(arg1: *mut Fl_Pack, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Pack_redraw(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_show(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_hide(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_activate(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_deactivate(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_redraw_label(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_resize(
        arg1: *mut Fl_Pack,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Pack_widget_resize(
        arg1: *mut Fl_Pack,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Pack_tooltip(arg1: *mut Fl_Pack) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Pack_set_tooltip(arg1: *mut Fl_Pack, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Pack_get_type(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_type(arg1: *mut Fl_Pack, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_color(arg1: *mut Fl_Pack) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Pack_set_color(arg1: *mut Fl_Pack, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Pack_measure_label(
        arg1: *const Fl_Pack,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Pack_label_color(arg1: *mut Fl_Pack) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Pack_set_label_color(arg1: *mut Fl_Pack, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Pack_label_font(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_label_font(arg1: *mut Fl_Pack, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_label_size(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_label_size(arg1: *mut Fl_Pack, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_label_type(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_label_type(arg1: *mut Fl_Pack, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_box(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_box(arg1: *mut Fl_Pack, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_changed(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_changed(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_clear_changed(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_align(arg1: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_align(arg1: *mut Fl_Pack, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_delete(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_set_image(arg1: *mut Fl_Pack, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_handle(
        self_: *mut Fl_Pack,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Pack_handle_event(
        self_: *mut Fl_Pack,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_draw(
        self_: *mut Fl_Pack,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Pack_resize_callback(
        self_: *mut Fl_Pack,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Pack_set_when(arg1: *mut Fl_Pack, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_when(arg1: *const Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_image(arg1: *const Fl_Pack) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_parent(self_: *const Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_selection_color(arg1: *mut Fl_Pack) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Pack_set_selection_color(arg1: *mut Fl_Pack, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Pack_do_callback(arg1: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_inside(
        self_: *const Fl_Pack,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_window(arg1: *const Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_top_window(arg1: *const Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_takes_events(arg1: *const Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_user_data(arg1: *const Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_take_focus(self_: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_visible_focus(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_clear_visible_focus(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_visible_focus(self_: *mut Fl_Pack, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_has_visible_focus(self_: *mut Fl_Pack) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Pack_set_user_data(arg1: *mut Fl_Pack, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_draw_data(self_: *const Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_handle_data(self_: *const Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_set_draw_data(self_: *mut Fl_Pack, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_set_handle_data(self_: *mut Fl_Pack, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_damage(self_: *const Fl_Pack) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Pack_set_damage(self_: *mut Fl_Pack, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Pack_set_damage_area(
        self_: *mut Fl_Pack,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Pack_clear_damage(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_as_window(self_: *mut Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_as_group(self_: *mut Fl_Pack) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_set_deimage(arg1: *mut Fl_Pack, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_deimage(arg1: *const Fl_Pack) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Pack_set_callback(
        arg1: *mut Fl_Pack,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Pack_set_deleter(
        arg1: *mut Fl_Pack,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Pack_visible(self_: *const Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_visible_r(self_: *const Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_active(self_: *const Fl_Pack) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Pack_active_r(self_: *const Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_callback(self_: *const Fl_Pack) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Pack_set_deletion_callback(
        self_: *mut Fl_Pack,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Pack_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Pack;
}
extern "C" {
    pub fn Fl_Pack_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Pack;
}
extern "C" {
    pub fn Fl_Pack_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_spacing(self_: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_set_spacing(self_: *mut Fl_Pack, spacing: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_begin(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_end(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_find(
        self_: *mut Fl_Pack,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_add(self_: *mut Fl_Pack, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_insert(
        self_: *mut Fl_Pack,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Pack_remove(self_: *mut Fl_Pack, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_remove_by_index(self_: *mut Fl_Pack, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_clear(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_children(self_: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_child(arg1: *mut Fl_Pack, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Pack_resizable(self_: *mut Fl_Pack, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Pack_set_clip_children(self_: *mut Fl_Pack, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Pack_clip_children(self_: *mut Fl_Pack) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Pack_init_sizes(self_: *mut Fl_Pack);
}
extern "C" {
    pub fn Fl_Pack_draw_child(self_: *const Fl_Pack, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Pack_update_child(self_: *const Fl_Pack, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Pack_draw_outside_label(self_: *const Fl_Pack, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Pack_draw_children(self_: *mut Fl_Pack);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Scroll {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Scroll_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Scroll;
}
extern "C" {
    pub fn Fl_Scroll_x(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_y(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_width(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_height(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_label(arg1: *mut Fl_Scroll) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Scroll_set_label(arg1: *mut Fl_Scroll, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Scroll_redraw(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_show(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_hide(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_activate(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_deactivate(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_redraw_label(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_resize(
        arg1: *mut Fl_Scroll,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Scroll_widget_resize(
        arg1: *mut Fl_Scroll,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Scroll_tooltip(arg1: *mut Fl_Scroll) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Scroll_set_tooltip(arg1: *mut Fl_Scroll, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Scroll_get_type(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_type(arg1: *mut Fl_Scroll, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_color(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Scroll_set_color(arg1: *mut Fl_Scroll, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Scroll_measure_label(
        arg1: *const Fl_Scroll,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Scroll_label_color(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Scroll_set_label_color(arg1: *mut Fl_Scroll, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Scroll_label_font(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_label_font(arg1: *mut Fl_Scroll, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_label_size(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_label_size(arg1: *mut Fl_Scroll, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_label_type(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_label_type(arg1: *mut Fl_Scroll, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_box(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_box(arg1: *mut Fl_Scroll, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_changed(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_changed(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_clear_changed(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_align(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_align(arg1: *mut Fl_Scroll, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_delete(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_set_image(arg1: *mut Fl_Scroll, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_handle(
        self_: *mut Fl_Scroll,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Scroll_handle_event(
        self_: *mut Fl_Scroll,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_draw(
        self_: *mut Fl_Scroll,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Scroll_resize_callback(
        self_: *mut Fl_Scroll,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Scroll_set_when(arg1: *mut Fl_Scroll, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_when(arg1: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_image(arg1: *const Fl_Scroll) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_parent(self_: *const Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_selection_color(arg1: *mut Fl_Scroll) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Scroll_set_selection_color(arg1: *mut Fl_Scroll, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Scroll_do_callback(arg1: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_inside(
        self_: *const Fl_Scroll,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_window(arg1: *const Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_top_window(arg1: *const Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_takes_events(arg1: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_user_data(arg1: *const Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_take_focus(self_: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_visible_focus(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_clear_visible_focus(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_visible_focus(self_: *mut Fl_Scroll, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_has_visible_focus(self_: *mut Fl_Scroll) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Scroll_set_user_data(arg1: *mut Fl_Scroll, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_draw_data(self_: *const Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_handle_data(self_: *const Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_set_draw_data(self_: *mut Fl_Scroll, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_set_handle_data(self_: *mut Fl_Scroll, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_damage(self_: *const Fl_Scroll) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Scroll_set_damage(self_: *mut Fl_Scroll, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Scroll_set_damage_area(
        self_: *mut Fl_Scroll,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Scroll_clear_damage(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_as_window(self_: *mut Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_as_group(self_: *mut Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_set_deimage(arg1: *mut Fl_Scroll, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_deimage(arg1: *const Fl_Scroll) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_set_callback(
        arg1: *mut Fl_Scroll,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Scroll_set_deleter(
        arg1: *mut Fl_Scroll,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Scroll_visible(self_: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_visible_r(self_: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_active(self_: *const Fl_Scroll) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Scroll_active_r(self_: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_callback(self_: *const Fl_Scroll) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Scroll_set_deletion_callback(
        self_: *mut Fl_Scroll,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Scroll_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Scroll;
}
extern "C" {
    pub fn Fl_Scroll_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Scroll;
}
extern "C" {
    pub fn Fl_Scroll_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_scrollbar(self_: *mut Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_hscrollbar(self_: *mut Fl_Scroll) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Scroll_xposition(self_: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_yposition(self_: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_scroll_to(
        self_: *mut Fl_Scroll,
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Scroll_scrollbar_size(self_: *const Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_set_scrollbar_size(self_: *mut Fl_Scroll, newSize: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_begin(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_end(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_find(
        self_: *mut Fl_Scroll,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_add(self_: *mut Fl_Scroll, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_insert(
        self_: *mut Fl_Scroll,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Scroll_remove(self_: *mut Fl_Scroll, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_remove_by_index(self_: *mut Fl_Scroll, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_clear(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_children(self_: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_child(arg1: *mut Fl_Scroll, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Scroll_resizable(self_: *mut Fl_Scroll, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Scroll_set_clip_children(self_: *mut Fl_Scroll, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Scroll_clip_children(self_: *mut Fl_Scroll) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Scroll_init_sizes(self_: *mut Fl_Scroll);
}
extern "C" {
    pub fn Fl_Scroll_draw_child(self_: *const Fl_Scroll, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Scroll_update_child(self_: *const Fl_Scroll, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Scroll_draw_outside_label(self_: *const Fl_Scroll, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Scroll_draw_children(self_: *mut Fl_Scroll);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Tabs {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Tabs_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Tabs;
}
extern "C" {
    pub fn Fl_Tabs_x(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_y(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_width(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_height(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_label(arg1: *mut Fl_Tabs) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Tabs_set_label(arg1: *mut Fl_Tabs, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Tabs_redraw(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_show(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_hide(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_activate(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_deactivate(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_redraw_label(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_resize(
        arg1: *mut Fl_Tabs,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tabs_widget_resize(
        arg1: *mut Fl_Tabs,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tabs_tooltip(arg1: *mut Fl_Tabs) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Tabs_set_tooltip(arg1: *mut Fl_Tabs, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Tabs_get_type(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_type(arg1: *mut Fl_Tabs, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_color(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tabs_set_color(arg1: *mut Fl_Tabs, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tabs_measure_label(
        arg1: *const Fl_Tabs,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tabs_label_color(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tabs_set_label_color(arg1: *mut Fl_Tabs, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tabs_label_font(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_label_font(arg1: *mut Fl_Tabs, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_label_size(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_label_size(arg1: *mut Fl_Tabs, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_label_type(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_label_type(arg1: *mut Fl_Tabs, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_box(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_box(arg1: *mut Fl_Tabs, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_changed(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_changed(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_clear_changed(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_align(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_align(arg1: *mut Fl_Tabs, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_delete(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_set_image(arg1: *mut Fl_Tabs, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_handle(
        self_: *mut Fl_Tabs,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tabs_handle_event(
        self_: *mut Fl_Tabs,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_draw(
        self_: *mut Fl_Tabs,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tabs_resize_callback(
        self_: *mut Fl_Tabs,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tabs_set_when(arg1: *mut Fl_Tabs, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_when(arg1: *const Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_image(arg1: *const Fl_Tabs) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_parent(self_: *const Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_selection_color(arg1: *mut Fl_Tabs) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tabs_set_selection_color(arg1: *mut Fl_Tabs, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tabs_do_callback(arg1: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_inside(
        self_: *const Fl_Tabs,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_window(arg1: *const Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_top_window(arg1: *const Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_takes_events(arg1: *const Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_user_data(arg1: *const Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_take_focus(self_: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_set_visible_focus(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_clear_visible_focus(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_visible_focus(self_: *mut Fl_Tabs, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_has_visible_focus(self_: *mut Fl_Tabs) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tabs_set_user_data(arg1: *mut Fl_Tabs, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_draw_data(self_: *const Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_handle_data(self_: *const Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_set_draw_data(self_: *mut Fl_Tabs, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_set_handle_data(self_: *mut Fl_Tabs, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_damage(self_: *const Fl_Tabs) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Tabs_set_damage(self_: *mut Fl_Tabs, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Tabs_set_damage_area(
        self_: *mut Fl_Tabs,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tabs_clear_damage(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_as_window(self_: *mut Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_as_group(self_: *mut Fl_Tabs) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_set_deimage(arg1: *mut Fl_Tabs, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_deimage(arg1: *const Fl_Tabs) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tabs_set_callback(
        arg1: *mut Fl_Tabs,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tabs_set_deleter(
        arg1: *mut Fl_Tabs,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Tabs_visible(self_: *const Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_visible_r(self_: *const Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_active(self_: *const Fl_Tabs) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tabs_active_r(self_: *const Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_callback(self_: *const Fl_Tabs) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Tabs_set_deletion_callback(
        self_: *mut Fl_Tabs,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tabs_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Tabs;
}
extern "C" {
    pub fn Fl_Tabs_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Tabs;
}
extern "C" {
    pub fn Fl_Tabs_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_value(self_: *mut Fl_Tabs) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Tabs_set_value(self_: *mut Fl_Tabs, w: *mut Fl_Widget) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_push(self_: *const Fl_Tabs) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Tabs_set_push(self_: *mut Fl_Tabs, w: *mut Fl_Widget) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_client_area(
        self_: *mut Fl_Tabs,
        rx: *mut ::std::os::raw::c_int,
        ry: *mut ::std::os::raw::c_int,
        rw: *mut ::std::os::raw::c_int,
        rh: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tabs_set_tab_align(self_: *mut Fl_Tabs, a: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_tab_align(self_: *const Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_handle_overflow(self_: *mut Fl_Tabs, ov: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_begin(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_end(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_find(
        self_: *mut Fl_Tabs,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_add(self_: *mut Fl_Tabs, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_insert(
        self_: *mut Fl_Tabs,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tabs_remove(self_: *mut Fl_Tabs, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_remove_by_index(self_: *mut Fl_Tabs, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_clear(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_children(self_: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_child(arg1: *mut Fl_Tabs, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Tabs_resizable(self_: *mut Fl_Tabs, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tabs_set_clip_children(self_: *mut Fl_Tabs, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tabs_clip_children(self_: *mut Fl_Tabs) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tabs_init_sizes(self_: *mut Fl_Tabs);
}
extern "C" {
    pub fn Fl_Tabs_draw_child(self_: *const Fl_Tabs, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Tabs_update_child(self_: *const Fl_Tabs, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Tabs_draw_outside_label(self_: *const Fl_Tabs, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Tabs_draw_children(self_: *mut Fl_Tabs);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Tile {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Tile_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Tile;
}
extern "C" {
    pub fn Fl_Tile_x(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_y(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_width(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_height(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_label(arg1: *mut Fl_Tile) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Tile_set_label(arg1: *mut Fl_Tile, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Tile_redraw(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_show(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_hide(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_activate(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_deactivate(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_redraw_label(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_resize(
        arg1: *mut Fl_Tile,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tile_widget_resize(
        arg1: *mut Fl_Tile,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tile_tooltip(arg1: *mut Fl_Tile) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Tile_set_tooltip(arg1: *mut Fl_Tile, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Tile_get_type(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_type(arg1: *mut Fl_Tile, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_color(arg1: *mut Fl_Tile) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tile_set_color(arg1: *mut Fl_Tile, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tile_measure_label(
        arg1: *const Fl_Tile,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tile_label_color(arg1: *mut Fl_Tile) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tile_set_label_color(arg1: *mut Fl_Tile, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tile_label_font(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_label_font(arg1: *mut Fl_Tile, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_label_size(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_label_size(arg1: *mut Fl_Tile, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_label_type(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_label_type(arg1: *mut Fl_Tile, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_box(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_box(arg1: *mut Fl_Tile, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_changed(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_changed(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_clear_changed(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_align(arg1: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_align(arg1: *mut Fl_Tile, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_delete(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_set_image(arg1: *mut Fl_Tile, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_handle(
        self_: *mut Fl_Tile,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tile_handle_event(
        self_: *mut Fl_Tile,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_draw(
        self_: *mut Fl_Tile,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tile_resize_callback(
        self_: *mut Fl_Tile,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tile_set_when(arg1: *mut Fl_Tile, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_when(arg1: *const Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_image(arg1: *const Fl_Tile) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_parent(self_: *const Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_selection_color(arg1: *mut Fl_Tile) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tile_set_selection_color(arg1: *mut Fl_Tile, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tile_do_callback(arg1: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_inside(
        self_: *const Fl_Tile,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_window(arg1: *const Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_top_window(arg1: *const Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_takes_events(arg1: *const Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_user_data(arg1: *const Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_take_focus(self_: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_set_visible_focus(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_clear_visible_focus(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_visible_focus(self_: *mut Fl_Tile, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_has_visible_focus(self_: *mut Fl_Tile) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tile_set_user_data(arg1: *mut Fl_Tile, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_draw_data(self_: *const Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_handle_data(self_: *const Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_set_draw_data(self_: *mut Fl_Tile, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_set_handle_data(self_: *mut Fl_Tile, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_damage(self_: *const Fl_Tile) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Tile_set_damage(self_: *mut Fl_Tile, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Tile_set_damage_area(
        self_: *mut Fl_Tile,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tile_clear_damage(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_as_window(self_: *mut Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_as_group(self_: *mut Fl_Tile) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_set_deimage(arg1: *mut Fl_Tile, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_deimage(arg1: *const Fl_Tile) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tile_set_callback(
        arg1: *mut Fl_Tile,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tile_set_deleter(
        arg1: *mut Fl_Tile,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Tile_visible(self_: *const Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_visible_r(self_: *const Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_active(self_: *const Fl_Tile) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tile_active_r(self_: *const Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_callback(self_: *const Fl_Tile) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Tile_set_deletion_callback(
        self_: *mut Fl_Tile,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tile_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Tile;
}
extern "C" {
    pub fn Fl_Tile_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Tile;
}
extern "C" {
    pub fn Fl_Tile_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_begin(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_end(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_find(
        self_: *mut Fl_Tile,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_add(self_: *mut Fl_Tile, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_insert(
        self_: *mut Fl_Tile,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tile_remove(self_: *mut Fl_Tile, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_remove_by_index(self_: *mut Fl_Tile, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_clear(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_children(self_: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_child(arg1: *mut Fl_Tile, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Tile_resizable(self_: *mut Fl_Tile, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tile_set_clip_children(self_: *mut Fl_Tile, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tile_clip_children(self_: *mut Fl_Tile) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tile_init_sizes(self_: *mut Fl_Tile);
}
extern "C" {
    pub fn Fl_Tile_draw_child(self_: *const Fl_Tile, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Tile_update_child(self_: *const Fl_Tile, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Tile_draw_outside_label(self_: *const Fl_Tile, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Tile_draw_children(self_: *mut Fl_Tile);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Wizard {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Wizard_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Wizard;
}
extern "C" {
    pub fn Fl_Wizard_x(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_y(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_width(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_height(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_label(arg1: *mut Fl_Wizard) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Wizard_set_label(arg1: *mut Fl_Wizard, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Wizard_redraw(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_show(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_hide(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_activate(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_deactivate(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_redraw_label(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_resize(
        arg1: *mut Fl_Wizard,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Wizard_widget_resize(
        arg1: *mut Fl_Wizard,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Wizard_tooltip(arg1: *mut Fl_Wizard) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Wizard_set_tooltip(arg1: *mut Fl_Wizard, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Wizard_get_type(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_type(arg1: *mut Fl_Wizard, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_color(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Wizard_set_color(arg1: *mut Fl_Wizard, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Wizard_measure_label(
        arg1: *const Fl_Wizard,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Wizard_label_color(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Wizard_set_label_color(arg1: *mut Fl_Wizard, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Wizard_label_font(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_label_font(arg1: *mut Fl_Wizard, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_label_size(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_label_size(arg1: *mut Fl_Wizard, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_label_type(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_label_type(arg1: *mut Fl_Wizard, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_box(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_box(arg1: *mut Fl_Wizard, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_changed(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_changed(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_clear_changed(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_align(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_align(arg1: *mut Fl_Wizard, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_delete(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_set_image(arg1: *mut Fl_Wizard, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_handle(
        self_: *mut Fl_Wizard,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Wizard_handle_event(
        self_: *mut Fl_Wizard,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_draw(
        self_: *mut Fl_Wizard,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Wizard_resize_callback(
        self_: *mut Fl_Wizard,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Wizard_set_when(arg1: *mut Fl_Wizard, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_when(arg1: *const Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_image(arg1: *const Fl_Wizard) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_parent(self_: *const Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_selection_color(arg1: *mut Fl_Wizard) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Wizard_set_selection_color(arg1: *mut Fl_Wizard, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Wizard_do_callback(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_inside(
        self_: *const Fl_Wizard,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_window(arg1: *const Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_top_window(arg1: *const Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_takes_events(arg1: *const Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_user_data(arg1: *const Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_take_focus(self_: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_set_visible_focus(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_clear_visible_focus(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_visible_focus(self_: *mut Fl_Wizard, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_has_visible_focus(self_: *mut Fl_Wizard) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Wizard_set_user_data(arg1: *mut Fl_Wizard, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_draw_data(self_: *const Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_handle_data(self_: *const Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_set_draw_data(self_: *mut Fl_Wizard, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_set_handle_data(self_: *mut Fl_Wizard, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_damage(self_: *const Fl_Wizard) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Wizard_set_damage(self_: *mut Fl_Wizard, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Wizard_set_damage_area(
        self_: *mut Fl_Wizard,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Wizard_clear_damage(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_as_window(self_: *mut Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_as_group(self_: *mut Fl_Wizard) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_set_deimage(arg1: *mut Fl_Wizard, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_deimage(arg1: *const Fl_Wizard) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Wizard_set_callback(
        arg1: *mut Fl_Wizard,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Wizard_set_deleter(
        arg1: *mut Fl_Wizard,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Wizard_visible(self_: *const Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_visible_r(self_: *const Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_active(self_: *const Fl_Wizard) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Wizard_active_r(self_: *const Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_callback(self_: *const Fl_Wizard) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Wizard_set_deletion_callback(
        self_: *mut Fl_Wizard,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Wizard_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Wizard;
}
extern "C" {
    pub fn Fl_Wizard_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Wizard;
}
extern "C" {
    pub fn Fl_Wizard_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_next(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_prev(arg1: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_value(arg1: *mut Fl_Wizard) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Wizard_set_value(arg1: *mut Fl_Wizard, arg2: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Wizard_begin(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_end(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_find(
        self_: *mut Fl_Wizard,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_add(self_: *mut Fl_Wizard, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_insert(
        self_: *mut Fl_Wizard,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Wizard_remove(self_: *mut Fl_Wizard, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_remove_by_index(self_: *mut Fl_Wizard, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_clear(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_children(self_: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_child(arg1: *mut Fl_Wizard, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Wizard_resizable(self_: *mut Fl_Wizard, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Wizard_set_clip_children(self_: *mut Fl_Wizard, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Wizard_clip_children(self_: *mut Fl_Wizard) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Wizard_init_sizes(self_: *mut Fl_Wizard);
}
extern "C" {
    pub fn Fl_Wizard_draw_child(self_: *const Fl_Wizard, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Wizard_update_child(self_: *const Fl_Wizard, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Wizard_draw_outside_label(self_: *const Fl_Wizard, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Wizard_draw_children(self_: *mut Fl_Wizard);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Color_Chooser {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Color_Chooser_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Color_Chooser;
}
extern "C" {
    pub fn Fl_Color_Chooser_x(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_y(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_width(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_height(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_label(arg1: *mut Fl_Color_Chooser) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_label(
        arg1: *mut Fl_Color_Chooser,
        title: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_redraw(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_show(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_hide(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_activate(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_deactivate(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_redraw_label(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_resize(
        arg1: *mut Fl_Color_Chooser,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_widget_resize(
        arg1: *mut Fl_Color_Chooser,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_tooltip(arg1: *mut Fl_Color_Chooser) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_tooltip(
        arg1: *mut Fl_Color_Chooser,
        txt: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_get_type(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_type(arg1: *mut Fl_Color_Chooser, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_color(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_color(arg1: *mut Fl_Color_Chooser, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Color_Chooser_measure_label(
        arg1: *const Fl_Color_Chooser,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_label_color(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_label_color(
        arg1: *mut Fl_Color_Chooser,
        color: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_label_font(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_label_font(
        arg1: *mut Fl_Color_Chooser,
        font: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_label_size(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_label_size(arg1: *mut Fl_Color_Chooser, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_label_type(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_label_type(arg1: *mut Fl_Color_Chooser, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_box(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_box(arg1: *mut Fl_Color_Chooser, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_changed(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_changed(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_clear_changed(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_align(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_align(arg1: *mut Fl_Color_Chooser, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_delete(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_set_image(
        arg1: *mut Fl_Color_Chooser,
        arg2: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_handle(
        self_: *mut Fl_Color_Chooser,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_handle_event(
        self_: *mut Fl_Color_Chooser,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_draw(
        self_: *mut Fl_Color_Chooser,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_resize_callback(
        self_: *mut Fl_Color_Chooser,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_set_when(arg1: *mut Fl_Color_Chooser, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_when(arg1: *const Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_image(arg1: *const Fl_Color_Chooser) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_parent(self_: *const Fl_Color_Chooser) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_selection_color(arg1: *mut Fl_Color_Chooser) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_selection_color(
        arg1: *mut Fl_Color_Chooser,
        color: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_do_callback(arg1: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_inside(
        self_: *const Fl_Color_Chooser,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_window(arg1: *const Fl_Color_Chooser) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_top_window(
        arg1: *const Fl_Color_Chooser,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_takes_events(arg1: *const Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_user_data(arg1: *const Fl_Color_Chooser)
        -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_take_focus(self_: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_visible_focus(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_clear_visible_focus(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_visible_focus(self_: *mut Fl_Color_Chooser, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_has_visible_focus(
        self_: *mut Fl_Color_Chooser,
    ) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_user_data(
        arg1: *mut Fl_Color_Chooser,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_draw_data(
        self_: *const Fl_Color_Chooser,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_handle_data(
        self_: *const Fl_Color_Chooser,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_draw_data(
        self_: *mut Fl_Color_Chooser,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_set_handle_data(
        self_: *mut Fl_Color_Chooser,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_damage(self_: *const Fl_Color_Chooser) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_damage(self_: *mut Fl_Color_Chooser, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Color_Chooser_set_damage_area(
        self_: *mut Fl_Color_Chooser,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_clear_damage(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_as_window(self_: *mut Fl_Color_Chooser) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_as_group(self_: *mut Fl_Color_Chooser) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_deimage(
        arg1: *mut Fl_Color_Chooser,
        arg2: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_deimage(arg1: *const Fl_Color_Chooser)
        -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_callback(
        arg1: *mut Fl_Color_Chooser,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_set_deleter(
        arg1: *mut Fl_Color_Chooser,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_visible(self_: *const Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_visible_r(self_: *const Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_active(self_: *const Fl_Color_Chooser) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Color_Chooser_active_r(self_: *const Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_callback(self_: *const Fl_Color_Chooser) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_deletion_callback(
        self_: *mut Fl_Color_Chooser,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Color_Chooser;
}
extern "C" {
    pub fn Fl_Color_Chooser_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Color_Chooser;
}
extern "C" {
    pub fn Fl_Color_Chooser_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Color_Chooser_r(self_: *mut Fl_Color_Chooser) -> f64;
}
extern "C" {
    pub fn Fl_Color_Chooser_g(self_: *mut Fl_Color_Chooser) -> f64;
}
extern "C" {
    pub fn Fl_Color_Chooser_b(self_: *mut Fl_Color_Chooser) -> f64;
}
extern "C" {
    pub fn Fl_Color_Chooser_set_rgb(
        self_: *mut Fl_Color_Chooser,
        r: f64,
        g: f64,
        b: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_begin(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_end(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_find(
        self_: *mut Fl_Color_Chooser,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_add(self_: *mut Fl_Color_Chooser, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Color_Chooser_insert(
        self_: *mut Fl_Color_Chooser,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_remove(self_: *mut Fl_Color_Chooser, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Color_Chooser_remove_by_index(
        self_: *mut Fl_Color_Chooser,
        idx: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_clear(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_children(self_: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_child(
        arg1: *mut Fl_Color_Chooser,
        index: ::std::os::raw::c_int,
    ) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Color_Chooser_resizable(
        self_: *mut Fl_Color_Chooser,
        arg1: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_set_clip_children(
        self_: *mut Fl_Color_Chooser,
        c: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Color_Chooser_clip_children(self_: *mut Fl_Color_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Color_Chooser_init_sizes(self_: *mut Fl_Color_Chooser);
}
extern "C" {
    pub fn Fl_Color_Chooser_draw_child(self_: *const Fl_Color_Chooser, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Color_Chooser_update_child(self_: *const Fl_Color_Chooser, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Color_Chooser_draw_outside_label(self_: *const Fl_Color_Chooser, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Color_Chooser_draw_children(self_: *mut Fl_Color_Chooser);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Flex {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Flex_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Flex;
}
extern "C" {
    pub fn Fl_Flex_x(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_y(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_width(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_height(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_label(arg1: *mut Fl_Flex) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Flex_set_label(arg1: *mut Fl_Flex, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Flex_redraw(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_show(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_hide(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_activate(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_deactivate(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_redraw_label(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_resize(
        arg1: *mut Fl_Flex,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Flex_widget_resize(
        arg1: *mut Fl_Flex,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Flex_tooltip(arg1: *mut Fl_Flex) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Flex_set_tooltip(arg1: *mut Fl_Flex, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Flex_get_type(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_type(arg1: *mut Fl_Flex, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_color(arg1: *mut Fl_Flex) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Flex_set_color(arg1: *mut Fl_Flex, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Flex_measure_label(
        arg1: *const Fl_Flex,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Flex_label_color(arg1: *mut Fl_Flex) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Flex_set_label_color(arg1: *mut Fl_Flex, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Flex_label_font(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_label_font(arg1: *mut Fl_Flex, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_label_size(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_label_size(arg1: *mut Fl_Flex, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_label_type(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_label_type(arg1: *mut Fl_Flex, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_box(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_box(arg1: *mut Fl_Flex, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_changed(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_changed(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_clear_changed(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_align(arg1: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_align(arg1: *mut Fl_Flex, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_delete(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_set_image(arg1: *mut Fl_Flex, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_handle(
        self_: *mut Fl_Flex,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Flex_handle_event(
        self_: *mut Fl_Flex,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_draw(
        self_: *mut Fl_Flex,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Flex_resize_callback(
        self_: *mut Fl_Flex,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Flex_set_when(arg1: *mut Fl_Flex, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_when(arg1: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_image(arg1: *const Fl_Flex) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_parent(self_: *const Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_selection_color(arg1: *mut Fl_Flex) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Flex_set_selection_color(arg1: *mut Fl_Flex, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Flex_do_callback(arg1: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_inside(
        self_: *const Fl_Flex,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_window(arg1: *const Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_top_window(arg1: *const Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_takes_events(arg1: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_user_data(arg1: *const Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_take_focus(self_: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_visible_focus(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_clear_visible_focus(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_visible_focus(self_: *mut Fl_Flex, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_has_visible_focus(self_: *mut Fl_Flex) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Flex_set_user_data(arg1: *mut Fl_Flex, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_draw_data(self_: *const Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_handle_data(self_: *const Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_set_draw_data(self_: *mut Fl_Flex, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_set_handle_data(self_: *mut Fl_Flex, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_damage(self_: *const Fl_Flex) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Flex_set_damage(self_: *mut Fl_Flex, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Flex_set_damage_area(
        self_: *mut Fl_Flex,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Flex_clear_damage(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_as_window(self_: *mut Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_as_group(self_: *mut Fl_Flex) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_set_deimage(arg1: *mut Fl_Flex, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_deimage(arg1: *const Fl_Flex) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Flex_set_callback(
        arg1: *mut Fl_Flex,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Flex_set_deleter(
        arg1: *mut Fl_Flex,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Flex_visible(self_: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_visible_r(self_: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_active(self_: *const Fl_Flex) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Flex_active_r(self_: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_callback(self_: *const Fl_Flex) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Flex_set_deletion_callback(
        self_: *mut Fl_Flex,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Flex_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Flex;
}
extern "C" {
    pub fn Fl_Flex_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Flex;
}
extern "C" {
    pub fn Fl_Flex_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_set_size(self_: *mut Fl_Flex, w: *mut Fl_Widget, size: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_set_margin(self_: *mut Fl_Flex, m: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_margin(self_: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_pad(self_: *mut Fl_Flex, p: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_pad(self_: *const Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_set_margins(
        self_: *mut Fl_Flex,
        x1: ::std::os::raw::c_int,
        y1: ::std::os::raw::c_int,
        x2: ::std::os::raw::c_int,
        y2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Flex_margins(
        self_: *const Fl_Flex,
        x1: *mut ::std::os::raw::c_int,
        y1: *mut ::std::os::raw::c_int,
        x2: *mut ::std::os::raw::c_int,
        y2: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_begin(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_end(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_find(
        self_: *mut Fl_Flex,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_add(self_: *mut Fl_Flex, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_insert(
        self_: *mut Fl_Flex,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Flex_remove(self_: *mut Fl_Flex, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_remove_by_index(self_: *mut Fl_Flex, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_clear(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_children(self_: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_child(arg1: *mut Fl_Flex, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Flex_resizable(self_: *mut Fl_Flex, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Flex_set_clip_children(self_: *mut Fl_Flex, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Flex_clip_children(self_: *mut Fl_Flex) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Flex_init_sizes(self_: *mut Fl_Flex);
}
extern "C" {
    pub fn Fl_Flex_draw_child(self_: *const Fl_Flex, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Flex_update_child(self_: *const Fl_Flex, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Flex_draw_outside_label(self_: *const Fl_Flex, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Flex_draw_children(self_: *mut Fl_Flex);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Grid {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Grid_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Grid;
}
extern "C" {
    pub fn Fl_Grid_x(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_y(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_width(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_height(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_label(arg1: *mut Fl_Grid) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Grid_set_label(arg1: *mut Fl_Grid, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Grid_redraw(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_show(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_hide(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_activate(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_deactivate(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_redraw_label(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_resize(
        arg1: *mut Fl_Grid,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_widget_resize(
        arg1: *mut Fl_Grid,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_tooltip(arg1: *mut Fl_Grid) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Grid_set_tooltip(arg1: *mut Fl_Grid, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Grid_get_type(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_type(arg1: *mut Fl_Grid, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_color(arg1: *mut Fl_Grid) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Grid_set_color(arg1: *mut Fl_Grid, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Grid_measure_label(
        arg1: *const Fl_Grid,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_label_color(arg1: *mut Fl_Grid) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Grid_set_label_color(arg1: *mut Fl_Grid, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Grid_label_font(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_label_font(arg1: *mut Fl_Grid, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_label_size(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_label_size(arg1: *mut Fl_Grid, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_label_type(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_label_type(arg1: *mut Fl_Grid, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_box(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_box(arg1: *mut Fl_Grid, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_changed(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_changed(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_clear_changed(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_align(arg1: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_align(arg1: *mut Fl_Grid, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_delete(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_set_image(arg1: *mut Fl_Grid, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_handle(
        self_: *mut Fl_Grid,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Grid_handle_event(
        self_: *mut Fl_Grid,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_draw(
        self_: *mut Fl_Grid,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Grid_resize_callback(
        self_: *mut Fl_Grid,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Grid_set_when(arg1: *mut Fl_Grid, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_when(arg1: *const Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_image(arg1: *const Fl_Grid) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_parent(self_: *const Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_selection_color(arg1: *mut Fl_Grid) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Grid_set_selection_color(arg1: *mut Fl_Grid, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Grid_do_callback(arg1: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_inside(
        self_: *const Fl_Grid,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_window(arg1: *const Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_top_window(arg1: *const Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_takes_events(arg1: *const Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_user_data(arg1: *const Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_take_focus(self_: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_visible_focus(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_clear_visible_focus(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_visible_focus(self_: *mut Fl_Grid, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_has_visible_focus(self_: *mut Fl_Grid) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Grid_set_user_data(arg1: *mut Fl_Grid, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_draw_data(self_: *const Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_handle_data(self_: *const Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_set_draw_data(self_: *mut Fl_Grid, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_set_handle_data(self_: *mut Fl_Grid, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_damage(self_: *const Fl_Grid) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Grid_set_damage(self_: *mut Fl_Grid, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Grid_set_damage_area(
        self_: *mut Fl_Grid,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_clear_damage(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_as_window(self_: *mut Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_as_group(self_: *mut Fl_Grid) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_set_deimage(arg1: *mut Fl_Grid, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_deimage(arg1: *const Fl_Grid) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_set_callback(
        arg1: *mut Fl_Grid,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Grid_set_deleter(
        arg1: *mut Fl_Grid,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Grid_visible(self_: *const Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_visible_r(self_: *const Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_active(self_: *const Fl_Grid) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Grid_active_r(self_: *const Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_callback(self_: *const Fl_Grid) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Grid_set_deletion_callback(
        self_: *mut Fl_Grid,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Grid_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Grid;
}
extern "C" {
    pub fn Fl_Grid_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Grid;
}
extern "C" {
    pub fn Fl_Grid_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_set_layout(
        self_: *mut Fl_Grid,
        rows: ::std::os::raw::c_int,
        cols: ::std::os::raw::c_int,
        margin: ::std::os::raw::c_int,
        gap: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_layout(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_clear_layout(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_set_need_layout(self_: *mut Fl_Grid, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_need_layout(self_: *const Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_set_margin(
        self_: *mut Fl_Grid,
        left: ::std::os::raw::c_int,
        top: ::std::os::raw::c_int,
        right: ::std::os::raw::c_int,
        bottom: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_gap(
        self_: *mut Fl_Grid,
        row_gap: ::std::os::raw::c_int,
        col_gap: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_widget(
        self_: *mut Fl_Grid,
        wi: *mut Fl_Widget,
        row: ::std::os::raw::c_int,
        col: ::std::os::raw::c_int,
        align: ::std::os::raw::c_ushort,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_set_widget_ext(
        self_: *mut Fl_Grid,
        wi: *mut Fl_Widget,
        row: ::std::os::raw::c_int,
        col: ::std::os::raw::c_int,
        rowspan: ::std::os::raw::c_int,
        colspan: ::std::os::raw::c_int,
        align: ::std::os::raw::c_ushort,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Grid_set_col_width(
        self_: *mut Fl_Grid,
        col: ::std::os::raw::c_int,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_col_weight(
        self_: *mut Fl_Grid,
        col: ::std::os::raw::c_int,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_col_gap(
        self_: *mut Fl_Grid,
        col: ::std::os::raw::c_int,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_row_height(
        self_: *mut Fl_Grid,
        row: ::std::os::raw::c_int,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_row_weight(
        self_: *mut Fl_Grid,
        row: ::std::os::raw::c_int,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_set_row_gap(
        self_: *mut Fl_Grid,
        row: ::std::os::raw::c_int,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_show_grid(self_: *mut Fl_Grid, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_show_grid_with_color(
        self_: *mut Fl_Grid,
        set: ::std::os::raw::c_int,
        col: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn Fl_Grid_debug(self_: *mut Fl_Grid, level: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_begin(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_end(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_find(
        self_: *mut Fl_Grid,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_add(self_: *mut Fl_Grid, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_insert(
        self_: *mut Fl_Grid,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Grid_remove(self_: *mut Fl_Grid, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_remove_by_index(self_: *mut Fl_Grid, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_clear(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_children(self_: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_child(arg1: *mut Fl_Grid, index: ::std::os::raw::c_int) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Grid_resizable(self_: *mut Fl_Grid, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Grid_set_clip_children(self_: *mut Fl_Grid, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Grid_clip_children(self_: *mut Fl_Grid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Grid_init_sizes(self_: *mut Fl_Grid);
}
extern "C" {
    pub fn Fl_Grid_draw_child(self_: *const Fl_Grid, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Grid_update_child(self_: *const Fl_Grid, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Grid_draw_outside_label(self_: *const Fl_Grid, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Grid_draw_children(self_: *mut Fl_Grid);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Terminal {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Terminal_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Terminal;
}
extern "C" {
    pub fn Fl_Terminal_x(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_y(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_width(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_height(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_label(arg1: *mut Fl_Terminal) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Terminal_set_label(arg1: *mut Fl_Terminal, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Terminal_redraw(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_show(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_hide(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_activate(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_deactivate(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_redraw_label(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_resize(
        arg1: *mut Fl_Terminal,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_widget_resize(
        arg1: *mut Fl_Terminal,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_tooltip(arg1: *mut Fl_Terminal) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Terminal_set_tooltip(arg1: *mut Fl_Terminal, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Terminal_get_type(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_type(arg1: *mut Fl_Terminal, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_color(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_color(arg1: *mut Fl_Terminal, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_measure_label(
        arg1: *const Fl_Terminal,
        arg2: *mut ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_label_color(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_label_color(arg1: *mut Fl_Terminal, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_label_font(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_label_font(arg1: *mut Fl_Terminal, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_label_size(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_label_size(arg1: *mut Fl_Terminal, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_label_type(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_label_type(arg1: *mut Fl_Terminal, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_box(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_box(arg1: *mut Fl_Terminal, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_changed(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_changed(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_clear_changed(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_align(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_align(arg1: *mut Fl_Terminal, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_delete(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_set_image(arg1: *mut Fl_Terminal, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_handle(
        self_: *mut Fl_Terminal,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Terminal_handle_event(
        self_: *mut Fl_Terminal,
        event: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_draw(
        self_: *mut Fl_Terminal,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Terminal_resize_callback(
        self_: *mut Fl_Terminal,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::std::os::raw::c_int,
                y: ::std::os::raw::c_int,
                w: ::std::os::raw::c_int,
                h: ::std::os::raw::c_int,
                arg2: *mut ::std::os::raw::c_void,
            ),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Terminal_set_when(arg1: *mut Fl_Terminal, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_when(arg1: *const Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_image(arg1: *const Fl_Terminal) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_parent(self_: *const Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_selection_color(arg1: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_selection_color(arg1: *mut Fl_Terminal, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_do_callback(arg1: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_inside(
        self_: *const Fl_Terminal,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_window(arg1: *const Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_top_window(arg1: *const Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_takes_events(arg1: *const Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_user_data(arg1: *const Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_take_focus(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_visible_focus(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_clear_visible_focus(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_visible_focus(self_: *mut Fl_Terminal, v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_has_visible_focus(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_user_data(arg1: *mut Fl_Terminal, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_draw_data(self_: *const Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_handle_data(self_: *const Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_set_draw_data(self_: *mut Fl_Terminal, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_set_handle_data(self_: *mut Fl_Terminal, data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_damage(self_: *const Fl_Terminal) -> ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn Fl_Terminal_set_damage(self_: *mut Fl_Terminal, flag: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn Fl_Terminal_set_damage_area(
        self_: *mut Fl_Terminal,
        flag: ::std::os::raw::c_uchar,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        h: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_clear_damage(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_as_window(self_: *mut Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_as_group(self_: *mut Fl_Terminal) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_set_deimage(arg1: *mut Fl_Terminal, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_deimage(arg1: *const Fl_Terminal) -> *const ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Terminal_set_callback(
        arg1: *mut Fl_Terminal,
        arg2: Fl_Callback,
        arg3: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Terminal_set_deleter(
        arg1: *mut Fl_Terminal,
        arg2: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    );
}
extern "C" {
    pub fn Fl_Terminal_visible(self_: *const Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_visible_r(self_: *const Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_active(self_: *const Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_active_r(self_: *const Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_callback(self_: *const Fl_Terminal) -> Fl_Callback;
}
extern "C" {
    pub fn Fl_Terminal_set_deletion_callback(
        self_: *mut Fl_Terminal,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
        >,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Terminal_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Terminal;
}
extern "C" {
    pub fn Fl_Terminal_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Terminal;
}
extern "C" {
    pub fn Fl_Terminal_super_draw(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_super_draw_first(ptr: *mut Fl_Widget, flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_ansi(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_ansi(self_: *mut Fl_Terminal, boolean: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_append(self_: *mut Fl_Terminal, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Terminal_append_u8(
        self_: *mut Fl_Terminal,
        txt: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_append_ascii(self_: *mut Fl_Terminal, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Terminal_append_utf8(self_: *mut Fl_Terminal, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Terminal_append_utf8_u8(
        self_: *mut Fl_Terminal,
        txt: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_clear_history(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_cursor_col(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_cursor_row(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_cursor_bg_color(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_cursor_bg_color(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_cursor_fg_color(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_cursor_fg_color(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_display_columns(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_display_columns(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_display_rows(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_display_rows(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_history_lines(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_history_lines(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_history_rows(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_history_rows(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_history_use(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_margin_bottom(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_margin_bottom(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_margin_left(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_margin_left(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_margin_right(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_margin_right(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_margin_top(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_margin_top(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_print_char(self_: *mut Fl_Terminal, c: ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Terminal_print_char_utf8(
        self_: *mut Fl_Terminal,
        txt: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_put_char(
        self_: *mut Fl_Terminal,
        c: ::std::os::raw::c_char,
        row: ::std::os::raw::c_int,
        col: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_put_char_utf8(
        self_: *mut Fl_Terminal,
        txt: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        row: ::std::os::raw::c_int,
        col: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_redraw_rate(self_: *mut Fl_Terminal) -> f32;
}
extern "C" {
    pub fn Fl_Terminal_set_redraw_rate(self_: *mut Fl_Terminal, set: f32);
}
extern "C" {
    pub fn Fl_Terminal_redraw_style(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_redraw_style(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_reset_terminal(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_scrollbar_actual_size(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_scrollbar_size(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_scrollbar_size(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_selection_bg_color(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_selection_bg_color(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_selection_fg_color(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_selection_fg_color(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_show_unknown(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_show_unknown(self_: *mut Fl_Terminal, boolean: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_text_attrib(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_text_bg_color(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_text_bg_color(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_text_bg_color_default(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_text_bg_color_default(
        self_: *mut Fl_Terminal,
        set: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn Fl_Terminal_set_text_bg_color_xterm(
        self_: *mut Fl_Terminal,
        set: ::std::os::raw::c_uchar,
    );
}
extern "C" {
    pub fn Fl_Terminal_text_fg_color(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_text_fg_color(self_: *mut Fl_Terminal, set: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Terminal_text_fg_color_default(self_: *mut Fl_Terminal) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Terminal_set_text_fg_color_default(
        self_: *mut Fl_Terminal,
        set: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn Fl_Terminal_set_text_fg_color_xterm(
        self_: *mut Fl_Terminal,
        set: ::std::os::raw::c_uchar,
    );
}
extern "C" {
    pub fn Fl_Terminal_text_font(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_text_font(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_text_size(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_set_text_size(self_: *mut Fl_Terminal, set: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_begin(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_end(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_find(
        self_: *mut Fl_Terminal,
        arg1: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_add(self_: *mut Fl_Terminal, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_insert(
        self_: *mut Fl_Terminal,
        arg1: *mut ::std::os::raw::c_void,
        pos: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Terminal_remove(self_: *mut Fl_Terminal, wid: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_remove_by_index(self_: *mut Fl_Terminal, idx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_clear(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_children(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_child(
        arg1: *mut Fl_Terminal,
        index: ::std::os::raw::c_int,
    ) -> *mut Fl_Widget;
}
extern "C" {
    pub fn Fl_Terminal_resizable(self_: *mut Fl_Terminal, arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Terminal_set_clip_children(self_: *mut Fl_Terminal, c: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Terminal_clip_children(self_: *mut Fl_Terminal) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Terminal_init_sizes(self_: *mut Fl_Terminal);
}
extern "C" {
    pub fn Fl_Terminal_draw_child(self_: *const Fl_Terminal, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Terminal_update_child(self_: *const Fl_Terminal, w: *mut Fl_Widget);
}
extern "C" {
    pub fn Fl_Terminal_draw_outside_label(self_: *const Fl_Terminal, w: *const Fl_Widget);
}
extern "C" {
    pub fn Fl_Terminal_draw_children(self_: *mut Fl_Terminal);
}
